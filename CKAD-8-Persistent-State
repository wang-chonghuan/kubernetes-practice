#在pod里定义一个volumn并且挂载到容器上
apiVersion: v1
kind: Pod
metadata:
  name: business-app
spec:
  volumes:
  - name: logs-volume
    emptyDir: {}
  containers:
  - image: nginx
    name: nginx
    volumeMounts:
    - mountPath: /var/logs
      name: logs-volume
EOF

#查询存储类
kubectl get storageclass

#在这个配置文件中，我们定义了一个名为 "db-pv" 的 Kubernetes 持久卷，它是通过主机路径(hostPath)方式创建的，路径为 "/data/db"，并提供了 1GB 的存储容量，支持单个读写(ReadWriteOnce)访问模式。
#defining a PersistentVolume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: db-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: /data/db
EOF

k get persistentvolume



#这个配置文件演示了如何创建一个 Kubernetes 持久卷声明，以请求 512MB 的存储容量，并支持单个读写访问模式。如果有一个匹配请求的持久卷(PV)，PVC 将会被绑定到该 PV 上。
#要删把PVC和PV一起删除
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: db-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 512m
EOF

#这个配置文件演示了如何创建一个挂载了 Persistent Volume Claim 的 Kubernetes Pod，以使用与该 PVC 名称匹配的 Persistent Volume (PV)
$ cat pod-pvc.yaml 
apiVersion: v1
kind: Pod
metadata:
  name: app-consuming-pvc
spec:
  volumes:
  - name: app-storage
    persistentVolumeClaim:
      claimName: db-pvc
  containers:
  - image: alpine
    name: app
    command: ["/bin/sh"]
    args: ["-c", "while true; do sleep 60; done;"]
    volumeMounts:
    - mountPath: "/mnt/data"
      name: app-storage
EOF


